<div class="page-header">
  <h1><%=t '.title', :default => @project.project_name %></h1>
</div>


 <div class="backgroundContainer" >

   <div class = "column1">
<fieldset>

    <legend> General Information</legend>

      <dl class="dl-horizontal">

    <dt><strong>Project Name:</strong></dt>
    <dd><%= @project.project_name %></dd>

    <dt><strong>Project Budget:</strong></dt>
    <dd><%= @project.project_budget %></dd>

    <dt><strong>Start Date:</strong></dt>
        <% if @project.start_date.nil? %>
            <dd></dd>
        <% else %>
            <dd><%= @project.start_date.to_formatted_s(:long_ordinal)%></dd>
        <% end %>


    <dt><strong>Proposal Deadline:</strong></dt>

        <% if @project.proposal_deadline.nil? %>
            <dd></dd>
        <% else %>
            <dd><%= @project.proposal_deadline.to_formatted_s(:long_ordinal)%></dd>
        <% end %>
    <dt><strong>Project Status:</strong></dt>
    <dd><%= @project.project_status.project_status_name %></dd>

    <dt><strong>Project Setting:</strong></dt>
    <dd><%= @project.project_setting.project_setting_name %></dd>

    <dt><strong>Sales Person:</strong></dt>
    <dd><%= @project.sales_person.sales_person_fullname %></dd>
      </dl>

</fieldset>
   </div>

   <div>
<fieldset>
  <legend>Client Information</legend>

  <dl class="dl-horizontal">

    <dt><strong>Client Goal:</strong></dt>
    <dd><%= @project.client_goal %>

    <dt><strong>Deal Type:</strong></dt>
    <dd><%= @project.deal_type.deal_type_name %></dd>

    <dt><strong>Deal Type Desc:</strong></dt>
    <dd><%= @project.deal_type_description %></dd>

    <dt><strong>Mobilization Quantity:</strong></dt>
    <dd><%= @project.mobilization_quantity %></dd>

    <dt><strong>Time Frame Desc:</strong></dt>
    <dd><%= @project.time_frame_description %></dd>

    <dt><strong>Procurement Tool:</strong></dt>
    <dd><%= @project.procurement_tool.procurement_tool_name %></dd>

    <dt><strong>Irrigation Responsibility:</strong></dt>
    <dd><%= @project.irrigation_responsibility.irrigation_responsibility_name %></dd>

  </dl>

</fieldset>
  </div>

  </div>

<div class="backgroundContainer" >

  <div class = "column1">
<fieldset>
  <legend>Additional Project Information</legend>

  <br>
  <dl class="dl-horizontal">

    <dt><strong>Restricted Work Hours?:</strong></dt>
    <dd><%= @project.restricted_work_hours %></dd>

    <dt><strong>Liquidate Damages?:</strong></dt>
    <dd><%= t @project.liquidate_damages_yn.class %></dd>

    <dt><strong>Wages & Certified Payroll?:</strong></dt>
    <dd><%= t @project.prevailing_wages_certified_payroll_yn.class %></dd>

    <dt><strong>Permit Special Possessed?:</strong></dt>
    <dd><%= t @project.permit_special_inspection_in_possession.class %></dd>

    <dt><strong>Permit Submittal Required?</strong></dt>
    <dd><%= t @project.permit_submittal_required.class %></dd>

    <dt><strong>Permit Fees Required?:</strong></dt>
    <dd><%= t @project.permit_fees_required.class %></dd>

  </dl>

</fieldset>
</div>

  <div>
    <fieldset>
      <legend>Requested Sales Document Information</legend>

      <dl class="dl-horizontal">

        <dt><strong>Sales Documents Requested:</strong></dt>
        <% @project.project_requested_sales_documents.each do |sales| %>
        <dd><%= sales.requested_sales_document.requested_sales_document_name %></dd>
        <% end %>

      </dl>

    </fieldset>
  </div>

</div>

<div class = "showPageButton">

<% if current_user.admin? || current_user.salesrep? || current_user.insidesales? %>
<%= link_to t('.back', :default => t("helpers.links.back")),
              projects_path, :class => 'btn btn-default'  %>
<%= link_to t('.edit', :default => t("helpers.links.edit")),
              edit_project_path(@project), :class => 'btn btn-default' %>

      <button type="button" id="pick" class="btn btn-primary btn-sm">Documents</button>
<% elsif current_user.installer? %>
<%= link_to t('.back', :default => t("helpers.links.back")),
            projects_path, :class => 'btn btn-default'  %>
<% end %>

</div>


<!-- Tables --->

<% if current_user.admin? || current_user.salesrep? || current_user.insidesales? %>
<div>
<div class="headermargins">
    <h3><%= @project.project_name %> Sites</h3>
</div>
<table class="DataTables" id ="sites_table">
  <thead>
  <tr>
    <th>ID</th>
    <th>Site Name</th>
    <th>Address</th>
    <th>City</th>
    <th>State</th>
    <th>Zip</th>
    <th>Action</th>

  </tr>
  </thead>
      <tbody>
          <% @project.project_site_informations.each do |psi| %>

                <%= render partial: 'project_site_information_row', locals: {psi: psi} %>

          <%end %>
      </tbody>
  </table>

    <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#myModal">
      Add New Site
    </button>
    <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#myModal2">
      Select Existing Site
    </button>
    <br/>
</div>

<div>
<div class="headermargins">
  <h3><%= @project.project_name %> Contacts</h3>
</div>
<table class="DataTables" id="contacts_table">
  <thead>
  <tr>
    <th>ID</th>
    <th>Full Name</th>
    <th>Email</th>
    <th>Cell</th>
    <th>Work</th>
    <th>Address</th>
    <th>Client Name</th>
    <th>Contact Type</th>
    <th>Actions</th>
  </tr>
  </thead>
  <tbody>
  <% @project.project_contacts.each do |pc| %>

      <%= render partial: 'project_contact_information_rows', locals: {pc: pc} %>

  <%end %>
  </tbody>
</table>

    <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#myModal3">
      Add New Contact
    </button>
    <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#myModal4">
      Select Existing Contact
    </button>
    <br/>
</div>

  <!-- Button trigger modal to create a new site -->






<% end %>

        <!-- Modal -->
        <div class="modal fade" id="myModal2" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Add Existing Site</h4>
              </div>
              <div class="modal-body">
                <%= form_for @project_site_information, :remote => true, :html => { :class => "form-horizontal project_site_information" } do |f| %>

                    <div class="control-group">
                      <%= f.label :project_site_id, 'Project Site', :class => 'control-label' %>
                      <div class="controls funabounds">
                        <%= f.collection_select :project_site_id,ProjectSite.all, :id, :site_name,{}, :class => 'form-control' %>
                        <%= f.hidden_field :project_id, :value => @project.id %>
                            </div>
                      <%= error_span(@project_site_information[:project_site_id]) %>
                    </div>

                    <%= f.submit nil, :class => 'btn btn-primary' %>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <% end %>

              </div>
            </div>
          </div>
        </div>


        <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Add New Site</h4>
              </div>
              <div class="modal-body">
                <%= form_for @project_site, :remote => true, :html => { :class => "form-horizontal project_site" } do |f| %>
                    <%= f.fields_for :project_site_informations, @project_site.project_site_informations.build do |project_site_information| %>
                        <%= project_site_information.hidden_field :project_id, :value => @project.id %>
                    <% end %>
                    <% if @project_site.errors.any? %>
                        <div id="error_expl1" class="panel panel-danger">
                          <div class="panel-heading">
                            <h3 class="panel-title"><%= pluralize(@project_site.errors.count, "error") %> prohibited this project_site from being saved:</h3>
                          </div>
                          <div class="panel-body">
                            <ul>
                              <% @project_site.errors.full_messages.each do |msg| %>
                                  <li><%= msg %></li>
                              <% end %>
                              <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            </ul>
                          </div>
                        </div>
                    <% end %>

                    <div class="control-group">
                      <%= f.label :site_name, '*Site Name', :class => 'control-label' %>
                      <div class="controls">
                        <%= f.text_field :site_name, :class => 'form-control' %>
                      </div>
                      <%= error_span(@project_site[:site_name]) %>
                    </div>
                    <div class="control-group">
                      <%= f.label :site_address, '*Site Address', :class => 'control-label' %>
                      <div class="controls">
                        <%= f.text_field :site_address, :class => 'form-control' %>
                      </div>
                      <%= error_span(@project_site[:site_address]) %>
                    </div>
                    <div class="control-group">
                      <%= f.label :site_city, '*Site City', :class => 'control-label' %>
                      <div class="controls">
                        <%= f.text_field :site_city, :class => 'form-control' %>
                      </div>
                      <%= error_span(@project_site[:site_city]) %>
                    </div>
                    <div class="control-group">
                      <%= f.label :state_id, '*State', :class => 'control-label' %>
                      <div class="controls funabounds">
                        <%= f.collection_select :state_id, State.all, :id, :state_name, {}, :class => 'form-control get_state' %>
                      </div>
                      <%= error_span(@project_site[:state_id]) %>
                    </div>
                    <div class="control-group">
                      <%= f.label :site_zip, '*Site Zip', :class => 'control-label' %>
                      <div class="controls siteZip">
                        <%= f.text_field :site_zip, :class => 'form-control' %>
                      </div>
                      <%= error_span(@project_site[:site_zip]) %>
                    </div>
                    <div class="control-group">
                      <%= f.label :site_access, '*Site Access',:class => 'control-label' %>
                      <div class="controls">
                        <%= f.text_area :site_access, size: '10x6', :class => 'form-control' %>
                      </div>
                      <%= error_span(@project_site[:site_access]) %>
                    </div>

                    <br>




                    <%= f.submit nil, :class => 'btn btn-primary' %>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <% end %>

              </div>

            </div>
          </div>
        </div>


        <div class="modal fade" id="myModal3" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="myModalLabel">Add New Contact</h4>
      </div>
      <div class="modal-body">
        <%= form_for @contact, :html => { :class => "form-horizontal contact msform" } do |f| %>

            <% if @contact.errors.any? %>
                <div id="error_expl" class="panel panel-danger">
                  <div class="panel-heading">
                    <h3 class="panel-title"><%= pluralize(@contact.errors.count, "error") %> prohibited this contact from being saved:</h3>
                  </div>
                  <div class="panel-body">
                    <ul>
                      <% @contact.errors.full_messages.each do |msg| %>
                          <li><%= msg %></li>
                      <% end %>
                    </ul>
                  </div>
                </div>
            <% end %>

            <ul id = "progressbar">
              <li>Step 1 - Contact Type</li>
              <li>Step 2 - Contact Information</li>
              <li>Step 3 - Contact Location</li>
            </ul>

            <%=field_set_tag nil, class: 'fieldset_Contact_Type' do %>

                <h3 class="fs-subtitle"></h3>
                <div class="control-group">
                  <%= f.label :contact_type_id, '*Contact Type', :class => 'control-label' %>
                  <div class="controls funabounds">
                    <%= f.collection_select :contact_type_id, ContactType.all, :id, :contact_type_name, {}, :class => 'form-control' %>
                  </div>
                  <%= error_span(@contact[:contact_type_id]) %>
                </div>
                <div class="control-group">
                  <%= f.label :client_id, 'Client Name', :class => 'control-label' %>
                  <div class="controls funabounds">
                    <%= f.collection_select :client_id, Client.all, :id, :client_name, {}, class: 'form-control' %>
                  </div>
                  <%= error_span(@contact[:client_id]) %>
                </div>
                <br>

                <input type="button" name="next" class="next btn btn-default" value="Next" />
                <br>
            <%end%>

            <%=field_set_tag nil, class: 'fieldset_Contact_Information' do%>

                <h3 class="fs-subtitle"> Contact Information </h3>
                <div class="control-group">
                  <%= f.label :contact_first_name, '*First Name', :class => 'control-label' %>
                  <div class="controls">
                    <%= f.text_field :contact_first_name, :class => 'form-control' %>
                  </div>
                  <%= error_span(@contact[:contact_first_name]) %>
                </div>
                <div class="control-group">
                  <%= f.label :contact_last_name, '*Last Name', :class => 'control-label' %>
                  <div class="controls">
                    <%= f.text_field :contact_last_name, :class => 'form-control' %>
                  </div>
                  <%= error_span(@contact[:contact_last_name]) %>
                </div>
                <div class="control-group">
                  <%= f.label :contact_email, '*Email', :class => 'control-label' %>
                  <div class="controls">
                    <%= f.text_field :contact_email, :class => 'form-control' %>
                  </div>
                  <%= error_span(@contact[:contact_email]) %>
                </div>
                <div class="control-group">
                  <%= f.label :contact_cell, 'Cell Number', :class => 'control-label' %>
                  <div class="controls">
                    <%= f.text_field :contact_cell, :class => 'form-control' %>
                  </div>
                  <%= error_span(@contact[:contact_cell]) %>
                </div>
                <div class="control-group">
                  <%= f.label :contact_work, '*Work Number', :class => 'control-label' %>
                  <div class="controls">
                    <%= f.text_field :contact_work, :class => 'form-control' %>
                  </div>
                  <%= error_span(@contact[:contact_work]) %>
                </div>

                <input type="button" name="previous" class="previous btn btn-default" value="Previous" />
                <input type="button" name="next" class="next btn btn-default" value="Next" />
                <br>

            <% end %>


            <%= field_set_tag nil, class: 'fieldset_Contact_Location' do%>

                <h3 class="fs-subtitle"> Contact Location</h3>
                <div class="control-group">
                  <%= f.label :contact_address, '*Contact Address', :class => 'control-label' %>
                  <div class="controls">
                    <%= f.text_field :contact_address, :class => 'form-control' %>
                  </div>
                  <%= error_span(@contact[:contact_work]) %>
                </div>
                <div class="control-group">
                  <%= f.label :contact_city, '*City', :class => 'control-label' %>
                  <div class="controls">
                    <%= f.text_field :contact_city, :class => 'form-control' %>
                  </div>
                  <%= error_span(@contact[:contact_work]) %>
                </div>
                <div class="control-group">
                  <%= f.label :state_id, '*State', :class => 'control-label' %>
                  <div class="controls funabounds">
                    <%= f.collection_select :state_id, State.all, :id, :state_name, {}, :class => 'form-control' %>
                  </div>
                  <%= error_span(@contact[:contact_work]) %>
                </div>

                <div class="control-group">
                  <%= f.label :contact_zip, 'Zip', :class => 'control-label' %>
                  <div class="controls">
                    <%= f.text_field :contact_zip, :class => 'form-control' %>
                  </div>
                  <%= error_span(@contact[:contact_work]) %>
                </div>

                <input type="button" name="previous" class="previous btn btn-default" value="Previous" />
                <br>
            <% end %>



            <br>
            <br>


            <%= f.submit nil, :class => 'btn btn-primary' %>
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <% end %>

      </div>
    </div>
  </div>
</div>


        <div class="modal fade" id="myModal4" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
              <div class="modal-dialog">
                <div class="modal-content">
                  <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Select Contact</h4>
                  </div>
                  <div class="modal-body">
                    <%= form_for @project_contact, :remote => true, :html => { :class => "form-horizontal project_site_information" } do |f| %>
                        <div class="control-group">
                          <%= f.label :contact_id, 'Contact', :class => 'control-label' %>
                          <div class="controls funabounds">
                            <%= f.collection_select :contact_id,Contact.all, :id, :full_contact_name,{}, :class => 'form-control' %>
                            <%= f.hidden_field :project_id, :value => @project.id %>
                          </div>
                          <%= error_span(@project_site_information[:project_site_id]) %>
                        </div>
                        <%= f.submit nil, :class => 'btn btn-primary' %>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <% end %>
                  </div>
                </div>
              </div>
        </div>


<script type="text/javascript">
    //jQuery time
    var current_fs, next_fs, previous_fs; //fieldsets
    var left, opacity, scale; //fieldset properties which we will animate
    var animating; //flag to prevent quick multi-click glitches

    $(document).ready(function(){
        $('select option:contains("Texas")').prop('selected',true);
    });

    $(".next").click(function(){
        if(animating) return false;
        animating = true;

        current_fs = $(this).parent();
        next_fs = $(this).parent().next();

        //activate next step on progressbar using the index of next_fs
        $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");

        //show the next fieldset
        next_fs.show();
        //hide the current fieldset with style
        current_fs.animate({opacity: 0}, {
            step: function(now, mx) {
                //as the opacity of current_fs reduces to 0 - stored in "now"
                //1. scale current_fs down to 80%
                scale = 1 - (1 - now) * 0.2;
                //2. bring next_fs from the right(50%)
                left = (now * 50)+"%";
                //3. increase opacity of next_fs to 1 as it moves in
                opacity = 1 - now;
                current_fs.css({'transform': 'scale('+scale+')'});
                next_fs.css({'left': left, 'opacity': opacity});
            },
            duration: 800,
            complete: function(){
                current_fs.hide();
                animating = false;
            },
            //this comes from the custom easing plugin
            easing: 'easeInOutBack'
        });
    });

    $(".previous").click(function(){
        if(animating) return false;
        animating = true;

        current_fs = $(this).parent();
        previous_fs = $(this).parent().prev();

        //de-activate current step on progressbar
        $("#progressbar li").eq($("fieldset").index(current_fs)).removeClass("active");

        //show the previous fieldset
        previous_fs.show();
        //hide the current fieldset with style
        current_fs.animate({opacity: 0}, {
            step: function(now, mx) {
                //as the opacity of current_fs reduces to 0 - stored in "now"
                //1. scale previous_fs from 80% to 100%
                scale = 0.8 + (1 - now) * 0.2;
                //2. take current_fs to the right(50%) - from 0%
                left = ((1-now) * 50)+"%";
                //3. increase opacity of previous_fs to 1 as it moves in
                opacity = 1 - now;
                current_fs.css({'left': left});
                previous_fs.css({'transform': 'scale('+scale+')', 'opacity': opacity});
            },
            duration: 800,
            complete: function(){
                current_fs.hide();
                animating = false;
            },
            //this comes from the custom easing plugin
            easing: 'easeInOutBack'
        });
    });

    $(".submit").click(function(){
        return false;
    });
    /**
     * Created by Lawrence on 3/16/2015.
     */

</script>

<div class="modal fade" id="myModal4" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="myModalLabel">Add Existing Contact</h4>
      </div>
      <div class="modal-body">
        <%= form_for @project_site_information, :remote => true, :html => { :class => "form-horizontal project_site_information" } do |f| %>



            <%= f.submit nil, :class => 'btn btn-primary' %>
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <% end %>

      </div>
    </div>
  </div>
</div>

<script>
    function initPicker() {
        var picker = new FilePicker({
            apiKey: 'AIzaSyA3M8PIRLFfGr1oBfKawbHicBf3_NyHZ1U',
            clientId: '752569978631-qghpvb2v3t9ckml34744qnet4jtqnejv.apps.googleusercontent.com',
            buttonEl: document.getElementById('pick'),
            onSelect: function(file) {
                console.log(file);
                document.getElementById('fileInfo').innerHTML = file.title + '\n' + file.alternateLink + '\n' + file.downloadUrl;
                window.open(file.alternateLink);
            }
        });
    }

    function downloadFile(file, callback) {
        if (file.downloadUrl) {
            var accessToken = gapi.auth.getToken().access_token;
            var xhr = new XMLHttpRequest();
            xhr.open('GET', file.downloadUrl);
            xhr.setRequestHeader('Authorization', 'Bearer ' + accessToken);
            xhr.onload = function() {
                callback(xhr.responseText);
            };
            xhr.onerror = function() {
                callback(null);
            };
            xhr.send();
        } else {
            callback(null);
        }
    }

    /**!
     * Google Drive File Picker Example
     * By Daniel Lo Nigro (http://dan.cx/)
     */
    (function() {
        /**
         * Initialise a Google Driver file picker
         */
        var FilePicker = window.FilePicker = function(options) {
            // Config
            this.apiKey = options.apiKey;
            this.clientId = options.clientId;

            // Elements
            this.buttonEl = options.buttonEl;

            // Events
            this.onSelect = options.onSelect;
            this.buttonEl.addEventListener('click', this.open.bind(this));

            // Disable the button until the API loads, as it won't work properly until then.
            this.buttonEl.disabled = true;

            // Load the drive API
            gapi.client.setApiKey(this.apiKey);
            gapi.client.load('drive', 'v2', this._driveApiLoaded.bind(this));
            google.load('picker', '1', { callback: this._pickerApiLoaded.bind(this) });
        }

        FilePicker.prototype = {
            /**
             * Open the file picker.
             */
            open: function() {
                // Check if the user has already authenticated
                var token = gapi.auth.getToken();
                if (token) {
                    this._showPicker();
                } else {
                    // The user has not yet authenticated with Google
                    // We need to do the authentication before displaying the Drive picker.
                    this._doAuth(false, function() { this._showPicker(); }.bind(this));
                }
            },

            /**
             * Show the file picker once authentication has been done.
             * @private
             */
            _showPicker: function() {
                var accessToken = gapi.auth.getToken().access_token;
                var view = new google.picker.DocsView();
                view.setIncludeFolders(true);
                this.picker = new google.picker.PickerBuilder()
                        .enableFeature(google.picker.Feature.NAV_ENABLED)
                        .enableFeature(google.picker.Feature.MULTISELECT_ENABLED)
                        .setAppId(this.clientId)
                        .setDeveloperKey(this.apiKey)
                        .setOAuthToken(accessToken)
                        .addView(view)
                        .addView(new google.picker.DocsUploadView().setIncludeFolders(true))
                        .setCallback(this._pickerCallback.bind(this))
                        .build()
                        .setVisible(true);
            },

            /**
             * Called when a file has been selected in the Google Drive file picker.
             * @private
             */
            _pickerCallback: function(data) {
                if (data[google.picker.Response.ACTION] == google.picker.Action.PICKED) {
                    var file = data[google.picker.Response.DOCUMENTS][0],
                            id = file[google.picker.Document.ID],
                            request = gapi.client.drive.files.get({
                                fileId: id
                            });

                    request.execute(this._fileGetCallback.bind(this));
                }
            },
            /**
             * Called when file details have been retrieved from Google Drive.
             * @private
             */
            _fileGetCallback: function(file) {
                if (this.onSelect) {
                    this.onSelect(file);

                }
            },

            /**
             * Called when the Google Drive file picker API has finished loading.
             * @private
             */
            _pickerApiLoaded: function() {
                this.buttonEl.disabled = false;
            },

            /**
             * Called when the Google Drive API has finished loading.
             * @private
             */
            _driveApiLoaded: function() {
                this._doAuth(true);
            },

            /**
             * Authenticate with Google Drive via the Google JavaScript API.
             * @private
             */
            _doAuth: function(immediate, callback) {
                gapi.auth.authorize({
                    client_id: this.clientId,
                    scope: 'https://www.googleapis.com/auth/drive.readonly',
                    immediate: immediate
                }, callback);
            }
        };
    }());




</script>


<script src="https://www.google.com/jsapi?key=AIzaSyA3M8PIRLFfGr1oBfKawbHicBf3_NyHZ1U"></script>
<script src="https://apis.google.com/js/client.js?onload=initPicker"></script>





