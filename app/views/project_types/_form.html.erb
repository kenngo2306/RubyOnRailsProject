<body>
<div class="container">
  <div class="row vertical-offset-100">
    <div class="col-md-10 col-md-offset-1">
      <div class="panel panel-default">

        <div class="panel-body">

          <%= form_for @project_type, :html => { :class => "form-horizontal project_type" } do |f| %>

    <% if @project_type.errors.any? %>
    <div id="error_expl" class="panel panel-danger">
      <div class="panel-heading">
        <h3 class="panel-title"><%= pluralize(@project_type.errors.count, "error") %> prohibited this project_type from being saved:</h3>
      </div>
      <div class="panel-body">
        <ul>
        <% @project_type.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
        </ul>
      </div>
    </div>
  <% end %>

              <ul id = "progressbar">
                <li>Step 1 - Open-Ended Questions</li>
                <li>Step 2 - Multi-Select Questions</li>

              </ul>



              <%=field_set_tag nil, class: 'fieldset_open_ended' do %>

  <div class="control-group">
    <%= f.label :project_type_name,'Project Type Name', :class => 'control-label' %>
    <div class="controls">
      <%= f.text_field :project_type_name, :class => 'form-control' %>
    </div>
    <%= error_span(@project_type[:project_type_name]) %>
  </div>
<div >
    <%= f.label :question_name, "Text Fields Questions" , :class => 'control-label' %>
  <br>

  <%= f.fields_for :questions do |builder| %>
        <%= render 'question_fields', f:builder %>
  <% end %>
  <%= link_to_add_fields "Add Text Question", f, :questions %>
</div>
    <br>

                  <input type="button" name="next" class="next btn btn-default" value="Next"/>
                  <br>
                  <br>
                  <%= link_to t('.cancel', :default => t("helpers.links.cancel")), projects_path, :class => 'btn btn-default' %>


<%end%>


              <%=field_set_tag nil, class: 'fieldset_multiple_answer' do %>

  <%= f.fields_for :categories do |builder| %>
	<%= render 'category_fields', f: builder %>
  <% end %>
  <%= link_to_add_fields "Add Categories", f, :categories %>
                  <br>
                  <br>

                  <input type="button" name="previous" class="previous btn btn-default" value="Previous" />

                  <br>
                  <br>

  <%= f.submit nil, :class => 'btn btn-primary' %>
  <%= link_to t('.cancel', :default => t("helpers.links.cancel")),
            project_types_path, :class => 'btn btn-default' %>


          <%end%>



<%end%>

          <!-- jQuery -->
          <script src="http://thecodeplayer.com/uploads/js/jquery-1.9.1.min.js" type="text/javascript"></script>
          <!-- jQuery easing plugin -->
          <script src="http://thecodeplayer.com/uploads/js/jquery.easing.min.js" type="text/javascript"></script>

          <script type="text/javascript">
              //jQuery time
              var current_fs, next_fs, previous_fs; //fieldsets
              var left, opacity, scale; //fieldset properties which we will animate
              var animating; //flag to prevent quick multi-click glitches

              $(".next").click(function(){
                  if(animating) return false;
                  animating = true;

                  current_fs = $(this).parent();
                  next_fs = $(this).parent().next();

                  //activate next step on progressbar using the index of next_fs
                  $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");

                  //show the next fieldset
                  next_fs.show();
                  //hide the current fieldset with style
                  current_fs.animate({opacity: 0}, {
                      step: function(now, mx) {
                          //as the opacity of current_fs reduces to 0 - stored in "now"
                          //1. scale current_fs down to 80%
                          scale = 1 - (1 - now) * 0.2;
                          //2. bring next_fs from the right(50%)
                          left = (now * 50)+"%";
                          //3. increase opacity of next_fs to 1 as it moves in
                          opacity = 1 - now;
                          current_fs.css({'transform': 'scale('+scale+')'});
                          next_fs.css({'left': left, 'opacity': opacity});
                      },
                      duration: 800,
                      complete: function(){
                          current_fs.hide();
                          animating = false;
                      },
                      //this comes from the custom easing plugin
                      easing: 'easeInOutBack'
                  });
              });

              $(".previous").click(function(){
                  if(animating) return false;
                  animating = true;

                  current_fs = $(this).parent();
                  previous_fs = $(this).parent().prev();

                  //de-activate current step on progressbar
                  $("#progressbar li").eq($("fieldset").index(current_fs)).removeClass("active");

                  //show the previous fieldset
                  previous_fs.show();
                  //hide the current fieldset with style
                  current_fs.animate({opacity: 0}, {
                      step: function(now, mx) {
                          //as the opacity of current_fs reduces to 0 - stored in "now"
                          //1. scale previous_fs from 80% to 100%
                          scale = 0.8 + (1 - now) * 0.2;
                          //2. take current_fs to the right(50%) - from 0%
                          left = ((1-now) * 50)+"%";
                          //3. increase opacity of previous_fs to 1 as it moves in
                          opacity = 1 - now;
                          current_fs.css({'left': left});
                          previous_fs.css({'transform': 'scale('+scale+')', 'opacity': opacity});
                      },
                      duration: 800,
                      complete: function(){
                          current_fs.hide();
                          animating = false;
                      },
                      //this comes from the custom easing plugin
                      easing: 'easeInOutBack'
                  });
              });

              $(".submit").click(function(){
                  return false;
              });
              /**
               * Created by Lawrence on 3/16/2015.
               */

          </script>





        </div>
      </div>
    </div>
  </div>
</div>
</body>